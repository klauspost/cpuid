// Code generated by "stringer -type=FeatureID,Vendor"; DO NOT EDIT.

package cpuid

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ADX-1]
	_ = x[AESNI-2]
	_ = x[AMD3DNOW-3]
	_ = x[AMD3DNOWEXT-4]
	_ = x[AMXBF16-5]
	_ = x[AMXINT8-6]
	_ = x[AMXTILE-7]
	_ = x[AVX-8]
	_ = x[AVX2-9]
	_ = x[AVX512BF16-10]
	_ = x[AVX512BITALG-11]
	_ = x[AVX512BW-12]
	_ = x[AVX512CD-13]
	_ = x[AVX512DQ-14]
	_ = x[AVX512ER-15]
	_ = x[AVX512F-16]
	_ = x[AVX512FP16-17]
	_ = x[AVX512IFMA-18]
	_ = x[AVX512PF-19]
	_ = x[AVX512VBMI-20]
	_ = x[AVX512VBMI2-21]
	_ = x[AVX512VL-22]
	_ = x[AVX512VNNI-23]
	_ = x[AVX512VP2INTERSECT-24]
	_ = x[AVX512VPOPCNTDQ-25]
	_ = x[AVXSLOW-26]
	_ = x[BMI1-27]
	_ = x[BMI2-28]
	_ = x[CLDEMOTE-29]
	_ = x[CLMUL-30]
	_ = x[CLZERO-31]
	_ = x[CMOV-32]
	_ = x[CMPXCHG8-33]
	_ = x[CPBOOST-34]
	_ = x[CX16-35]
	_ = x[ENQCMD-36]
	_ = x[ERMS-37]
	_ = x[F16C-38]
	_ = x[FMA3-39]
	_ = x[FMA4-40]
	_ = x[FXSR-41]
	_ = x[FXSROPT-42]
	_ = x[GFNI-43]
	_ = x[HLE-44]
	_ = x[HTT-45]
	_ = x[HWA-46]
	_ = x[HYPERVISOR-47]
	_ = x[IBPB-48]
	_ = x[IBS-49]
	_ = x[IBSBRNTRGT-50]
	_ = x[IBSFETCHSAM-51]
	_ = x[IBSFFV-52]
	_ = x[IBSOPCNT-53]
	_ = x[IBSOPCNTEXT-54]
	_ = x[IBSOPSAM-55]
	_ = x[IBSRDWROPCNT-56]
	_ = x[IBSRIPINVALIDCHK-57]
	_ = x[INT_WBINVD-58]
	_ = x[INVLPGB-59]
	_ = x[LAHF-60]
	_ = x[LZCNT-61]
	_ = x[MCAOVERFLOW-62]
	_ = x[MCOMMIT-63]
	_ = x[MMX-64]
	_ = x[MMXEXT-65]
	_ = x[MOVBE-66]
	_ = x[MOVDIR64B-67]
	_ = x[MOVDIRI-68]
	_ = x[MPX-69]
	_ = x[MSRIRC-70]
	_ = x[NX-71]
	_ = x[OSXSAVE-72]
	_ = x[POPCNT-73]
	_ = x[RDPRU-74]
	_ = x[RDRAND-75]
	_ = x[RDSEED-76]
	_ = x[RDTSCP-77]
	_ = x[RTM-78]
	_ = x[RTM_ALWAYS_ABORT-79]
	_ = x[SCE-80]
	_ = x[SERIALIZE-81]
	_ = x[SGX-82]
	_ = x[SGXLC-83]
	_ = x[SHA-84]
	_ = x[SSE-85]
	_ = x[SSE2-86]
	_ = x[SSE3-87]
	_ = x[SSE4-88]
	_ = x[SSE42-89]
	_ = x[SSE4A-90]
	_ = x[SSSE3-91]
	_ = x[STIBP-92]
	_ = x[SUCCOR-93]
	_ = x[TBM-94]
	_ = x[TSXLDTRK-95]
	_ = x[VAES-96]
	_ = x[VMX-97]
	_ = x[VPCLMULQDQ-98]
	_ = x[WAITPKG-99]
	_ = x[WBNOINVD-100]
	_ = x[X87-101]
	_ = x[XOP-102]
	_ = x[XSAVE-103]
	_ = x[AESARM-104]
	_ = x[ARMCPUID-105]
	_ = x[ASIMD-106]
	_ = x[ASIMDDP-107]
	_ = x[ASIMDHP-108]
	_ = x[ASIMDRDM-109]
	_ = x[ATOMICS-110]
	_ = x[CRC32-111]
	_ = x[DCPOP-112]
	_ = x[EVTSTRM-113]
	_ = x[FCMA-114]
	_ = x[FP-115]
	_ = x[FPHP-116]
	_ = x[GPA-117]
	_ = x[JSCVT-118]
	_ = x[LRCPC-119]
	_ = x[PMULL-120]
	_ = x[SHA1-121]
	_ = x[SHA2-122]
	_ = x[SHA3-123]
	_ = x[SHA512-124]
	_ = x[SM3-125]
	_ = x[SM4-126]
	_ = x[SVE-127]
	_ = x[lastID-128]
	_ = x[firstID-0]
}

const _FeatureID_name = "firstIDADXAESNIAMD3DNOWAMD3DNOWEXTAMXBF16AMXINT8AMXTILEAVXAVX2AVX512BF16AVX512BITALGAVX512BWAVX512CDAVX512DQAVX512ERAVX512FAVX512FP16AVX512IFMAAVX512PFAVX512VBMIAVX512VBMI2AVX512VLAVX512VNNIAVX512VP2INTERSECTAVX512VPOPCNTDQAVXSLOWBMI1BMI2CLDEMOTECLMULCLZEROCMOVCMPXCHG8CPBOOSTCX16ENQCMDERMSF16CFMA3FMA4FXSRFXSROPTGFNIHLEHTTHWAHYPERVISORIBPBIBSIBSBRNTRGTIBSFETCHSAMIBSFFVIBSOPCNTIBSOPCNTEXTIBSOPSAMIBSRDWROPCNTIBSRIPINVALIDCHKINT_WBINVDINVLPGBLAHFLZCNTMCAOVERFLOWMCOMMITMMXMMXEXTMOVBEMOVDIR64BMOVDIRIMPXMSRIRCNXOSXSAVEPOPCNTRDPRURDRANDRDSEEDRDTSCPRTMRTM_ALWAYS_ABORTSCESERIALIZESGXSGXLCSHASSESSE2SSE3SSE4SSE42SSE4ASSSE3STIBPSUCCORTBMTSXLDTRKVAESVMXVPCLMULQDQWAITPKGWBNOINVDX87XOPXSAVEAESARMARMCPUIDASIMDASIMDDPASIMDHPASIMDRDMATOMICSCRC32DCPOPEVTSTRMFCMAFPFPHPGPAJSCVTLRCPCPMULLSHA1SHA2SHA3SHA512SM3SM4SVElastID"

var _FeatureID_index = [...]uint16{0, 7, 10, 15, 23, 34, 41, 48, 55, 58, 62, 72, 84, 92, 100, 108, 116, 123, 133, 143, 151, 161, 172, 180, 190, 208, 223, 230, 234, 238, 246, 251, 257, 261, 269, 276, 280, 286, 290, 294, 298, 302, 306, 313, 317, 320, 323, 326, 336, 340, 343, 353, 364, 370, 378, 389, 397, 409, 425, 435, 442, 446, 451, 462, 469, 472, 478, 483, 492, 499, 502, 508, 510, 517, 523, 528, 534, 540, 546, 549, 565, 568, 577, 580, 585, 588, 591, 595, 599, 603, 608, 613, 618, 623, 629, 632, 640, 644, 647, 657, 664, 672, 675, 678, 683, 689, 697, 702, 709, 716, 724, 731, 736, 741, 748, 752, 754, 758, 761, 766, 771, 776, 780, 784, 788, 794, 797, 800, 803, 809}

func (i FeatureID) String() string {
	if i < 0 || i >= FeatureID(len(_FeatureID_index)-1) {
		return "FeatureID(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FeatureID_name[_FeatureID_index[i]:_FeatureID_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VendorUnknown-0]
	_ = x[Intel-1]
	_ = x[AMD-2]
	_ = x[VIA-3]
	_ = x[Transmeta-4]
	_ = x[NSC-5]
	_ = x[KVM-6]
	_ = x[MSVM-7]
	_ = x[VMware-8]
	_ = x[XenHVM-9]
	_ = x[Bhyve-10]
	_ = x[Hygon-11]
	_ = x[SiS-12]
	_ = x[RDC-13]
	_ = x[Ampere-14]
	_ = x[ARM-15]
	_ = x[Broadcom-16]
	_ = x[Cavium-17]
	_ = x[DEC-18]
	_ = x[Fujitsu-19]
	_ = x[Infineon-20]
	_ = x[Motorola-21]
	_ = x[NVIDIA-22]
	_ = x[AMCC-23]
	_ = x[Qualcomm-24]
	_ = x[Marvell-25]
	_ = x[lastVendor-26]
}

const _Vendor_name = "VendorUnknownIntelAMDVIATransmetaNSCKVMMSVMVMwareXenHVMBhyveHygonSiSRDCAmpereARMBroadcomCaviumDECFujitsuInfineonMotorolaNVIDIAAMCCQualcommMarvelllastVendor"

var _Vendor_index = [...]uint8{0, 13, 18, 21, 24, 33, 36, 39, 43, 49, 55, 60, 65, 68, 71, 77, 80, 88, 94, 97, 104, 112, 120, 126, 130, 138, 145, 155}

func (i Vendor) String() string {
	if i < 0 || i >= Vendor(len(_Vendor_index)-1) {
		return "Vendor(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Vendor_name[_Vendor_index[i]:_Vendor_index[i+1]]
}
