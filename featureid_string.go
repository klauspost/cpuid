// Code generated by "stringer -type=FeatureID"; DO NOT EDIT.

package cpuid

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ADX-1]
	_ = x[AESNI-2]
	_ = x[AMD3DNOW-3]
	_ = x[AMD3DNOWEXT-4]
	_ = x[AMXBF16-5]
	_ = x[AMXINT8-6]
	_ = x[AMXTILE-7]
	_ = x[AVX-8]
	_ = x[AVX2-9]
	_ = x[AVX512BF16-10]
	_ = x[AVX512BITALG-11]
	_ = x[AVX512BW-12]
	_ = x[AVX512CD-13]
	_ = x[AVX512DQ-14]
	_ = x[AVX512ER-15]
	_ = x[AVX512F-16]
	_ = x[AVX512IFMA-17]
	_ = x[AVX512PF-18]
	_ = x[AVX512VBMI-19]
	_ = x[AVX512VBMI2-20]
	_ = x[AVX512VL-21]
	_ = x[AVX512VNNI-22]
	_ = x[AVX512VP2INTERSECT-23]
	_ = x[AVX512VPOPCNTDQ-24]
	_ = x[BMI1-25]
	_ = x[BMI2-26]
	_ = x[CLDEMOTE-27]
	_ = x[CLMUL-28]
	_ = x[CMOV-29]
	_ = x[CX16-30]
	_ = x[ENQCMD-31]
	_ = x[ERMS-32]
	_ = x[F16C-33]
	_ = x[FMA3-34]
	_ = x[FMA4-35]
	_ = x[GFNI-36]
	_ = x[HLE-37]
	_ = x[HTT-38]
	_ = x[HYPERVISOR-39]
	_ = x[IBPB-40]
	_ = x[IBS-41]
	_ = x[IBSBRNTRGT-42]
	_ = x[IBSFETCHSAM-43]
	_ = x[IBSFFV-44]
	_ = x[IBSOPCNT-45]
	_ = x[IBSOPCNTEXT-46]
	_ = x[IBSOPSAM-47]
	_ = x[IBSRDWROPCNT-48]
	_ = x[IBSRIPINVALIDCHK-49]
	_ = x[LZCNT-50]
	_ = x[MMX-51]
	_ = x[MMXEXT-52]
	_ = x[MOVDIR64B-53]
	_ = x[MOVDIRI-54]
	_ = x[MPX-55]
	_ = x[NX-56]
	_ = x[POPCNT-57]
	_ = x[RDRAND-58]
	_ = x[RDSEED-59]
	_ = x[RDTSCP-60]
	_ = x[RTM-61]
	_ = x[SERIALIZE-62]
	_ = x[SGX-63]
	_ = x[SGXLC-64]
	_ = x[SHA-65]
	_ = x[SSE-66]
	_ = x[SSE2-67]
	_ = x[SSE3-68]
	_ = x[SSE4-69]
	_ = x[SSE42-70]
	_ = x[SSE4A-71]
	_ = x[SSSE3-72]
	_ = x[STIBP-73]
	_ = x[TBM-74]
	_ = x[TSXLDTRK-75]
	_ = x[VAES-76]
	_ = x[VMX-77]
	_ = x[VPCLMULQDQ-78]
	_ = x[WAITPKG-79]
	_ = x[WBNOINVD-80]
	_ = x[XOP-81]
	_ = x[AESARM-82]
	_ = x[ARMCPUID-83]
	_ = x[ASIMD-84]
	_ = x[ASIMDDP-85]
	_ = x[ASIMDHP-86]
	_ = x[ASIMDRDM-87]
	_ = x[ATOMICS-88]
	_ = x[CRC32-89]
	_ = x[DCPOP-90]
	_ = x[EVTSTRM-91]
	_ = x[FCMA-92]
	_ = x[FP-93]
	_ = x[FPHP-94]
	_ = x[GPA-95]
	_ = x[JSCVT-96]
	_ = x[LRCPC-97]
	_ = x[PMULL-98]
	_ = x[SHA1-99]
	_ = x[SHA2-100]
	_ = x[SHA3-101]
	_ = x[SHA512-102]
	_ = x[SM3-103]
	_ = x[SM4-104]
	_ = x[SVE-105]
	_ = x[lastID-106]
	_ = x[firstID-0]
}

const _FeatureID_name = "firstIDADXAESNIAMD3DNOWAMD3DNOWEXTAMXBF16AMXINT8AMXTILEAVXAVX2AVX512BF16AVX512BITALGAVX512BWAVX512CDAVX512DQAVX512ERAVX512FAVX512IFMAAVX512PFAVX512VBMIAVX512VBMI2AVX512VLAVX512VNNIAVX512VP2INTERSECTAVX512VPOPCNTDQBMI1BMI2CLDEMOTECLMULCMOVCX16ENQCMDERMSF16CFMA3FMA4GFNIHLEHTTHYPERVISORIBPBIBSIBSBRNTRGTIBSFETCHSAMIBSFFVIBSOPCNTIBSOPCNTEXTIBSOPSAMIBSRDWROPCNTIBSRIPINVALIDCHKLZCNTMMXMMXEXTMOVDIR64BMOVDIRIMPXNXPOPCNTRDRANDRDSEEDRDTSCPRTMSERIALIZESGXSGXLCSHASSESSE2SSE3SSE4SSE42SSE4ASSSE3STIBPTBMTSXLDTRKVAESVMXVPCLMULQDQWAITPKGWBNOINVDXOPAESARMARMCPUIDASIMDASIMDDPASIMDHPASIMDRDMATOMICSCRC32DCPOPEVTSTRMFCMAFPFPHPGPAJSCVTLRCPCPMULLSHA1SHA2SHA3SHA512SM3SM4SVElastID"

var _FeatureID_index = [...]uint16{0, 7, 10, 15, 23, 34, 41, 48, 55, 58, 62, 72, 84, 92, 100, 108, 116, 123, 133, 141, 151, 162, 170, 180, 198, 213, 217, 221, 229, 234, 238, 242, 248, 252, 256, 260, 264, 268, 271, 274, 284, 288, 291, 301, 312, 318, 326, 337, 345, 357, 373, 378, 381, 387, 396, 403, 406, 408, 414, 420, 426, 432, 435, 444, 447, 452, 455, 458, 462, 466, 470, 475, 480, 485, 490, 493, 501, 505, 508, 518, 525, 533, 536, 542, 550, 555, 562, 569, 577, 584, 589, 594, 601, 605, 607, 611, 614, 619, 624, 629, 633, 637, 641, 647, 650, 653, 656, 662}

func (i FeatureID) String() string {
	if i < 0 || i >= FeatureID(len(_FeatureID_index)-1) {
		return "FeatureID(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FeatureID_name[_FeatureID_index[i]:_FeatureID_index[i+1]]
}
