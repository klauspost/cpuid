// Code generated by "stringer -type=FeatureID,Vendor"; DO NOT EDIT.

package cpuid

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ADX-1]
	_ = x[AESNI-2]
	_ = x[AMD3DNOW-3]
	_ = x[AMD3DNOWEXT-4]
	_ = x[AMXBF16-5]
	_ = x[AMXINT8-6]
	_ = x[AMXTILE-7]
	_ = x[AVX-8]
	_ = x[AVX2-9]
	_ = x[AVX512BF16-10]
	_ = x[AVX512BITALG-11]
	_ = x[AVX512BW-12]
	_ = x[AVX512CD-13]
	_ = x[AVX512DQ-14]
	_ = x[AVX512ER-15]
	_ = x[AVX512F-16]
	_ = x[AVX512IFMA-17]
	_ = x[AVX512PF-18]
	_ = x[AVX512VBMI-19]
	_ = x[AVX512VBMI2-20]
	_ = x[AVX512VL-21]
	_ = x[AVX512VNNI-22]
	_ = x[AVX512VP2INTERSECT-23]
	_ = x[AVX512VPOPCNTDQ-24]
	_ = x[AVXSLOW-25]
	_ = x[BMI1-26]
	_ = x[BMI2-27]
	_ = x[CLDEMOTE-28]
	_ = x[CLMUL-29]
	_ = x[CLZERO-30]
	_ = x[CMOV-31]
	_ = x[CPBOOST-32]
	_ = x[CX16-33]
	_ = x[ENQCMD-34]
	_ = x[ERMS-35]
	_ = x[F16C-36]
	_ = x[FMA3-37]
	_ = x[FMA4-38]
	_ = x[GFNI-39]
	_ = x[HLE-40]
	_ = x[HTT-41]
	_ = x[HWA-42]
	_ = x[HYPERVISOR-43]
	_ = x[IBPB-44]
	_ = x[IBS-45]
	_ = x[IBSBRNTRGT-46]
	_ = x[IBSFETCHSAM-47]
	_ = x[IBSFFV-48]
	_ = x[IBSOPCNT-49]
	_ = x[IBSOPCNTEXT-50]
	_ = x[IBSOPSAM-51]
	_ = x[IBSRDWROPCNT-52]
	_ = x[IBSRIPINVALIDCHK-53]
	_ = x[INT_WBINVD-54]
	_ = x[INVLPGB-55]
	_ = x[LZCNT-56]
	_ = x[MCAOVERFLOW-57]
	_ = x[MCOMMIT-58]
	_ = x[MMX-59]
	_ = x[MMXEXT-60]
	_ = x[MOVDIR64B-61]
	_ = x[MOVDIRI-62]
	_ = x[MPX-63]
	_ = x[MSRIRC-64]
	_ = x[NX-65]
	_ = x[POPCNT-66]
	_ = x[RDPRU-67]
	_ = x[RDRAND-68]
	_ = x[RDSEED-69]
	_ = x[RDTSCP-70]
	_ = x[RTM-71]
	_ = x[RTM_ALWAYS_ABORT-72]
	_ = x[SERIALIZE-73]
	_ = x[SGX-74]
	_ = x[SGXLC-75]
	_ = x[SHA-76]
	_ = x[SSE-77]
	_ = x[SSE2-78]
	_ = x[SSE3-79]
	_ = x[SSE4-80]
	_ = x[SSE42-81]
	_ = x[SSE4A-82]
	_ = x[SSSE3-83]
	_ = x[STIBP-84]
	_ = x[SUCCOR-85]
	_ = x[TBM-86]
	_ = x[TSXLDTRK-87]
	_ = x[VAES-88]
	_ = x[VMX-89]
	_ = x[VPCLMULQDQ-90]
	_ = x[WAITPKG-91]
	_ = x[WBNOINVD-92]
	_ = x[XOP-93]
	_ = x[AESARM-94]
	_ = x[ARMCPUID-95]
	_ = x[ASIMD-96]
	_ = x[ASIMDDP-97]
	_ = x[ASIMDHP-98]
	_ = x[ASIMDRDM-99]
	_ = x[ATOMICS-100]
	_ = x[CRC32-101]
	_ = x[DCPOP-102]
	_ = x[EVTSTRM-103]
	_ = x[FCMA-104]
	_ = x[FP-105]
	_ = x[FPHP-106]
	_ = x[GPA-107]
	_ = x[JSCVT-108]
	_ = x[LRCPC-109]
	_ = x[PMULL-110]
	_ = x[SHA1-111]
	_ = x[SHA2-112]
	_ = x[SHA3-113]
	_ = x[SHA512-114]
	_ = x[SM3-115]
	_ = x[SM4-116]
	_ = x[SVE-117]
	_ = x[lastID-118]
	_ = x[firstID-0]
}

const _FeatureID_name = "firstIDADXAESNIAMD3DNOWAMD3DNOWEXTAMXBF16AMXINT8AMXTILEAVXAVX2AVX512BF16AVX512BITALGAVX512BWAVX512CDAVX512DQAVX512ERAVX512FAVX512IFMAAVX512PFAVX512VBMIAVX512VBMI2AVX512VLAVX512VNNIAVX512VP2INTERSECTAVX512VPOPCNTDQAVXSLOWBMI1BMI2CLDEMOTECLMULCLZEROCMOVCPBOOSTCX16ENQCMDERMSF16CFMA3FMA4GFNIHLEHTTHWAHYPERVISORIBPBIBSIBSBRNTRGTIBSFETCHSAMIBSFFVIBSOPCNTIBSOPCNTEXTIBSOPSAMIBSRDWROPCNTIBSRIPINVALIDCHKINT_WBINVDINVLPGBLZCNTMCAOVERFLOWMCOMMITMMXMMXEXTMOVDIR64BMOVDIRIMPXMSRIRCNXPOPCNTRDPRURDRANDRDSEEDRDTSCPRTMRTM_ALWAYS_ABORTSERIALIZESGXSGXLCSHASSESSE2SSE3SSE4SSE42SSE4ASSSE3STIBPSUCCORTBMTSXLDTRKVAESVMXVPCLMULQDQWAITPKGWBNOINVDXOPAESARMARMCPUIDASIMDASIMDDPASIMDHPASIMDRDMATOMICSCRC32DCPOPEVTSTRMFCMAFPFPHPGPAJSCVTLRCPCPMULLSHA1SHA2SHA3SHA512SM3SM4SVElastID"

var _FeatureID_index = [...]uint16{0, 7, 10, 15, 23, 34, 41, 48, 55, 58, 62, 72, 84, 92, 100, 108, 116, 123, 133, 141, 151, 162, 170, 180, 198, 213, 220, 224, 228, 236, 241, 247, 251, 258, 262, 268, 272, 276, 280, 284, 288, 291, 294, 297, 307, 311, 314, 324, 335, 341, 349, 360, 368, 380, 396, 406, 413, 418, 429, 436, 439, 445, 454, 461, 464, 470, 472, 478, 483, 489, 495, 501, 504, 520, 529, 532, 537, 540, 543, 547, 551, 555, 560, 565, 570, 575, 581, 584, 592, 596, 599, 609, 616, 624, 627, 633, 641, 646, 653, 660, 668, 675, 680, 685, 692, 696, 698, 702, 705, 710, 715, 720, 724, 728, 732, 738, 741, 744, 747, 753}

func (i FeatureID) String() string {
	if i < 0 || i >= FeatureID(len(_FeatureID_index)-1) {
		return "FeatureID(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FeatureID_name[_FeatureID_index[i]:_FeatureID_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VendorUnknown-0]
	_ = x[Intel-1]
	_ = x[AMD-2]
	_ = x[VIA-3]
	_ = x[Transmeta-4]
	_ = x[NSC-5]
	_ = x[KVM-6]
	_ = x[MSVM-7]
	_ = x[VMware-8]
	_ = x[XenHVM-9]
	_ = x[Bhyve-10]
	_ = x[Hygon-11]
	_ = x[SiS-12]
	_ = x[RDC-13]
	_ = x[Ampere-14]
	_ = x[ARM-15]
	_ = x[Broadcom-16]
	_ = x[Cavium-17]
	_ = x[DEC-18]
	_ = x[Fujitsu-19]
	_ = x[Infineon-20]
	_ = x[Motorola-21]
	_ = x[NVIDIA-22]
	_ = x[AMCC-23]
	_ = x[Qualcomm-24]
	_ = x[Marvell-25]
	_ = x[lastVendor-26]
}

const _Vendor_name = "VendorUnknownIntelAMDVIATransmetaNSCKVMMSVMVMwareXenHVMBhyveHygonSiSRDCAmpereARMBroadcomCaviumDECFujitsuInfineonMotorolaNVIDIAAMCCQualcommMarvelllastVendor"

var _Vendor_index = [...]uint8{0, 13, 18, 21, 24, 33, 36, 39, 43, 49, 55, 60, 65, 68, 71, 77, 80, 88, 94, 97, 104, 112, 120, 126, 130, 138, 145, 155}

func (i Vendor) String() string {
	if i < 0 || i >= Vendor(len(_Vendor_index)-1) {
		return "Vendor(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Vendor_name[_Vendor_index[i]:_Vendor_index[i+1]]
}
