// Code generated by "stringer -type=FeatureID"; DO NOT EDIT.

package cpuid

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ADX-0]
	_ = x[AESNI-1]
	_ = x[AMD3DNOW-2]
	_ = x[AMD3DNOWEXT-3]
	_ = x[AMXBF16-4]
	_ = x[AMXINT8-5]
	_ = x[AMXTILE-6]
	_ = x[AVX-7]
	_ = x[AVX2-8]
	_ = x[AVX512BF16-9]
	_ = x[AVX512BITALG-10]
	_ = x[AVX512BW-11]
	_ = x[AVX512CD-12]
	_ = x[AVX512DQ-13]
	_ = x[AVX512ER-14]
	_ = x[AVX512F-15]
	_ = x[AVX512IFMA-16]
	_ = x[AVX512PF-17]
	_ = x[AVX512VBMI-18]
	_ = x[AVX512VBMI2-19]
	_ = x[AVX512VL-20]
	_ = x[AVX512VNNI-21]
	_ = x[AVX512VP2INTERSECT-22]
	_ = x[AVX512VPOPCNTDQ-23]
	_ = x[BMI1-24]
	_ = x[BMI2-25]
	_ = x[CLDEMOTE-26]
	_ = x[CLMUL-27]
	_ = x[CMOV-28]
	_ = x[CX16-29]
	_ = x[ENQCMD-30]
	_ = x[ERMS-31]
	_ = x[F16C-32]
	_ = x[FMA3-33]
	_ = x[FMA4-34]
	_ = x[GFNI-35]
	_ = x[HLE-36]
	_ = x[HTT-37]
	_ = x[HYPERVISOR-38]
	_ = x[IBPB-39]
	_ = x[LZCNT-40]
	_ = x[MMX-41]
	_ = x[MMXEXT-42]
	_ = x[MOVDIR64B-43]
	_ = x[MOVDIRI-44]
	_ = x[MPX-45]
	_ = x[NX-46]
	_ = x[POPCNT-47]
	_ = x[RDRAND-48]
	_ = x[RDSEED-49]
	_ = x[RDTSCP-50]
	_ = x[RTM-51]
	_ = x[SERIALIZE-52]
	_ = x[SGX-53]
	_ = x[SGXLC-54]
	_ = x[SHA-55]
	_ = x[SSE-56]
	_ = x[SSE2-57]
	_ = x[SSE3-58]
	_ = x[SSE4-59]
	_ = x[SSE42-60]
	_ = x[SSE4A-61]
	_ = x[SSSE3-62]
	_ = x[STIBP-63]
	_ = x[TBM-64]
	_ = x[TSXLDTRK-65]
	_ = x[VAES-66]
	_ = x[VMX-67]
	_ = x[VPCLMULQDQ-68]
	_ = x[WAITPKG-69]
	_ = x[WBNOINVD-70]
	_ = x[XOP-71]
	_ = x[IBS-72]
	_ = x[IBSFFV-73]
	_ = x[IBSFETCHSAM-74]
	_ = x[IBSOPSAM-75]
	_ = x[IBSRDWROPCNT-76]
	_ = x[IBSOPCNT-77]
	_ = x[IBSBRNTRGT-78]
	_ = x[IBSOPCNTEXT-79]
	_ = x[IBSRIPINVALIDCHK-80]
	_ = x[FP-81]
	_ = x[ASIMD-82]
	_ = x[EVTSTRM-83]
	_ = x[AES-84]
	_ = x[PMULL-85]
	_ = x[SHA1-86]
	_ = x[SHA2-87]
	_ = x[CRC32-88]
	_ = x[ATOMICS-89]
	_ = x[FPHP-90]
	_ = x[ASIMDHP-91]
	_ = x[ARMCPUID-92]
	_ = x[ASIMDRDM-93]
	_ = x[JSCVT-94]
	_ = x[FCMA-95]
	_ = x[LRCPC-96]
	_ = x[DCPOP-97]
	_ = x[SHA3-98]
	_ = x[SM3-99]
	_ = x[SM4-100]
	_ = x[ASIMDDP-101]
	_ = x[SHA512-102]
	_ = x[SVE-103]
	_ = x[GPA-104]
	_ = x[lastID-105]
}

const _FeatureID_name = "ADXAESNIAMD3DNOWAMD3DNOWEXTAMXBF16AMXINT8AMXTILEAVXAVX2AVX512BF16AVX512BITALGAVX512BWAVX512CDAVX512DQAVX512ERAVX512FAVX512IFMAAVX512PFAVX512VBMIAVX512VBMI2AVX512VLAVX512VNNIAVX512VP2INTERSECTAVX512VPOPCNTDQBMI1BMI2CLDEMOTECLMULCMOVCX16ENQCMDERMSF16CFMA3FMA4GFNIHLEHTTHYPERVISORIBPBLZCNTMMXMMXEXTMOVDIR64BMOVDIRIMPXNXPOPCNTRDRANDRDSEEDRDTSCPRTMSERIALIZESGXSGXLCSHASSESSE2SSE3SSE4SSE42SSE4ASSSE3STIBPTBMTSXLDTRKVAESVMXVPCLMULQDQWAITPKGWBNOINVDXOPIBSIBSFFVIBSFETCHSAMIBSOPSAMIBSRDWROPCNTIBSOPCNTIBSBRNTRGTIBSOPCNTEXTIBSRIPINVALIDCHKFPASIMDEVTSTRMAESPMULLSHA1SHA2CRC32ATOMICSFPHPASIMDHPARMCPUIDASIMDRDMJSCVTFCMALRCPCDCPOPSHA3SM3SM4ASIMDDPSHA512SVEGPAlastID"

var _FeatureID_index = [...]uint16{0, 3, 8, 16, 27, 34, 41, 48, 51, 55, 65, 77, 85, 93, 101, 109, 116, 126, 134, 144, 155, 163, 173, 191, 206, 210, 214, 222, 227, 231, 235, 241, 245, 249, 253, 257, 261, 264, 267, 277, 281, 286, 289, 295, 304, 311, 314, 316, 322, 328, 334, 340, 343, 352, 355, 360, 363, 366, 370, 374, 378, 383, 388, 393, 398, 401, 409, 413, 416, 426, 433, 441, 444, 447, 453, 464, 472, 484, 492, 502, 513, 529, 531, 536, 543, 546, 551, 555, 559, 564, 571, 575, 582, 590, 598, 603, 607, 612, 617, 621, 624, 627, 634, 640, 643, 646, 652}

func (i FeatureID) String() string {
	if i >= FeatureID(len(_FeatureID_index)-1) {
		return "FeatureID(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FeatureID_name[_FeatureID_index[i]:_FeatureID_index[i+1]]
}
